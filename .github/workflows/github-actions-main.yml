name: Test on Main Push
run-name: ${{ github.actor }} is pushing to main
on:
  push:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
      - name: Use npmmirror registry #temp fix for package problems
        run: npm config set registry https://registry.npmmirror.com
      - name: Install dependencies
        run: npm ci
      - name: Install Ionic CLI
        run: npm install -g @ionic/cli
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.ACCESSKEY }}
          aws-secret-access-key: ${{ secrets.SECRETACCESSKEY }}
          aws-region: eu-north-1
      - name: Fetch API URL from CloudFormation # if it exists, if not, apiUrl in env will be ''
        run: |
          API_URL=$(aws cloudformation describe-stacks --stack-name api \
            --query "Stacks[0].Outputs[?OutputKey=='ApiEndpoint'].OutputValue" --output text)
          echo "API_URL=$API_URL" >> $GITHUB_ENV
      - name: Inject API URL into environment.ts
        run: |
          sed -i "s|apiUrl: '.*'|apiUrl: '${API_URL}'|" src/environments/environment.ts
          sed -i "s|apiUrl: ''|apiUrl: \"${API_URL}\"|" src/environments/environment.prod.ts
      - name: Build Ionic projects
        run: ionic build
      - name: Run unit tests
        run: |
          npm test -- --watch=false --browsers=ChromeHeadless
          cd backend
          npm install
          npm test
      - name: Run e2e tests
        run: |
          npm install -g @ionic/cli
          npm install -g @angular/cli
          npm install -g cypress
          ionic serve --no-open --no-interactive --port=8100 & #runs ionic serve in the background
          SERVER_PID=$!
          sleep 5
          npx cypress run --headless --browser chrome
          sleep 5
          kill $SERVER_PID
      - name: Final status
        run: echo "This job's status is ${{ job.status }}."
