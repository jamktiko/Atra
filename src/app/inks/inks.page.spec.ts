// This file was generated by the Angular CLI and contains unit tests for the InksPage component.
/* import { ComponentFixture, TestBed } from '@angular/core/testing';
import { HttpClientTestingModule } from '@angular/common/http/testing';
import { InksPage } from './inks.page';

describe('InksPage', () => {
  //this does not pass
  let component: InksPage;
  let fixture: ComponentFixture<InksPage>;

  beforeEach(() => {
    fixture = TestBed.createComponent(InksPage);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});
 */

import { ComponentFixture, TestBed } from '@angular/core/testing';
import { HttpClientTestingModule } from '@angular/common/http/testing';
import { provideRouter } from '@angular/router';
import { InksPage } from './inks.page';
import { By } from '@angular/platform-browser';

describe('InksPage', () => {
  let component: InksPage;
  let fixture: ComponentFixture<InksPage>;

  beforeEach(async () => {
    await TestBed.configureTestingModule({
      imports: [InksPage, HttpClientTestingModule],
      providers: [provideRouter([])],
    }).compileComponents();

    fixture = TestBed.createComponent(InksPage);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  //test if the search bar is rendered correctly
  it('should render a search bar', () => {
    const compiled = fixture.nativeElement as HTMLElement;
    const searchbar = compiled.querySelector('ion-searchbar');
    expect(searchbar).toBeTruthy();
  });

  //test if after triggering filteredSearch-function, inks are rendered
  it('should render inks from filteredSearch()', () => {
    component.filteredSearch = () => [
      {
        product_name: 'Ink A',
        batch_number: '123',
        image_url: 'urlA',
        user_ink_id: 0,
        opened_at: new Date('2025-01-01'),
        expires_at: new Date('2030-01-01'),
        favorite: false,
        publicink_ink_id: 0,
        manufacturer: '',
        color: '',
        recalled: false,
        size: '',
        User_user_id: '',
      },
      {
        product_name: 'Ink B',
        batch_number: '456',
        image_url: 'urlB',
        user_ink_id: 0,
        opened_at: new Date('2025-01-01'),
        expires_at: new Date('2030-01-01'),
        favorite: false,
        publicink_ink_id: 0,
        manufacturer: '',
        color: '',
        recalled: false,
        size: '',
        User_user_id: '',
      },
    ];
    fixture.detectChanges();

    const inkElements = fixture.debugElement.queryAll(By.css('.bg-slate-900'));
    expect(inkElements.length).toBe(2);
  });

  //tests that inks are actually filtered with filtered
  it('should filter inks based on searchItem', () => {
    component.searchItem = 'Ink A';
    component.filteredSearch = () =>
      [
        {
          product_name: 'Ink A',
          batch_number: '123',
          image_url: 'urlA',
          user_ink_id: 1,
          opened_at: new Date(),
          expires_at: new Date(),
          favorite: false,
          publicink_ink_id: 0,
          manufacturer: '',
          color: '',
          recalled: false,
          size: '',
          User_user_id: '',
        },
        {
          product_name: 'Ink B',
          batch_number: '456',
          image_url: 'urlB',
          user_ink_id: 2,
          opened_at: new Date(),
          expires_at: new Date(),
          favorite: false,
          publicink_ink_id: 0,
          manufacturer: '',
          color: '',
          recalled: false,
          size: '',
          User_user_id: '',
        },
      ].filter((ink) => ink.product_name.includes(component.searchItem));

    fixture.detectChanges();

    const inkElements = fixture.debugElement.queryAll(By.css('.bg-slate-900'));
    expect(inkElements.length).toBe(1);
  });
});
