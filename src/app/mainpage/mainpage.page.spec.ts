// This file was generated by the Angular CLI and contains a basic unit test for the MainpagePage component.
/* import { ComponentFixture, TestBed } from '@angular/core/testing';
import { MainpagePage } from './mainpage.page';

describe('MainpagePage', () => {
  //this does not pass!!!
  let component: MainpagePage;
  let fixture: ComponentFixture<MainpagePage>;

  beforeEach(() => {
    fixture = TestBed.createComponent(MainpagePage);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });

  //this passes
  it('should pass', () => {
    expect(true).toBe(true);
  });
}); */

// This test works
import { ComponentFixture, TestBed } from '@angular/core/testing';
import { HttpClientTestingModule } from '@angular/common/http/testing';
import { provideRouter } from '@angular/router';
import { MainpagePage } from './mainpage.page';

describe('MainpagePage', () => {
  let component: MainpagePage;
  let fixture: ComponentFixture<MainpagePage>;

  beforeEach(async () => {
    await TestBed.configureTestingModule({
      imports: [MainpagePage, HttpClientTestingModule],
      providers: [provideRouter([])],
    }).compileComponents();

    fixture = TestBed.createComponent(MainpagePage);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  // tests that the component was created successfully
  it('should create', () => {
    expect(component).toBeTruthy();
  });

  // test that the header title is rendered correctly
  it('should render the header with title "ATRA"', () => {
    const compiled = fixture.nativeElement as HTMLElement;
    const title = compiled.querySelector('ion-title');
    expect(title?.textContent?.trim()).toBe('ATRA');
  });

  //test if greeting contains mock user first name
  it('should greet the user by first name', () => {
    component.user = {
      firstname: 'Juuso',
      lastname: 'Testaaja',
      email: 'juuso@testaaja.com',
      id: 1,
    }; // mock user
    fixture.detectChanges();

    const compiled = fixture.nativeElement as HTMLElement;
    const greeting = compiled.querySelector('h2');
    expect(greeting?.textContent).toContain('Juuso');
  });
});
